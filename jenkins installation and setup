 create one Ec2 instance according your requirments
 execute the all the below scripts in the instance terminal

STEP 1:
#Install Jenkins Using Below script
        sudo apt-get update -y
        sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
            https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
            https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
            /etc/apt/sources.list.d/jenkins.list > /dev/null
        sudo apt-get update
        sudo apt-get install fontconfig openjdk-17-jre
        sudo apt-get install jenkins -y
        sudo systemctl start jenkins
        sudo systemctl enable jenkins
        sudo systemctl status jenkins

-> Later you will install docker using below commands
        sudo apt update
        sudo apt install docker.io
        sudo su - 
        usermod -aG docker jenkins
        usermod -aG docker ubuntu
        systemctl restart docker

       # Add Docker repository
       echo \
         "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
         https://download.docker.com/linux/ubuntu \
         $(lsb_release -cs) stable" | \
         sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
       sudo apt-get update -y
       sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
       sudo chmod 666 /var/run/docker.sock
       sudo usermod -aG docker jenkins
       sudo usermod -aG docker ubuntu
       sudo systemctl enable docker
       sudo systemctl start docker
       echo "Docker installation complete."

-> Install Maven using Below script
       # Install Maven
       # Maven will be updated automatically by the package manager
       sudo apt-get update -y
       sudo apt-get install maven -y
       mvn -version
       echo "Maven installation complete."

-> Install Trivy using Below script
       # Install Trivy-Scanner
       sudo apt-get install wget apt-transport-https gnupg lsb-release -y
       wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
       echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
       sudo apt-get update
       sudo apt-get install trivy
       echo "Trivy installation complete."

-> Install npm using Below script
       sudo apt-get update -y
       sudo apt install npm -y
       echo "NPM installation complete"

-> Install Sonar-Qube using Below script
       # Install SonarQube
       # Install unzip if not already installed
       sudo apt-get install unzip -y
       
       # Create a user for SonarQube
       sudo adduser --disabled-password --gecos 'SonarQube' sonarqube
       
       # Switch to SonarQube user and install SonarQube
       sudo su - sonarqube <<EOF
       # Fetch the latest SonarQube version from the official source
       SONARQUBE_VERSION=$(curl -s https://api.github.com/repos/SonarSource/sonarqube/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')
       SONARQUBE_URL="https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-${SONARQUBE_VERSION}.zip"
       
       # Download and extract SonarQube
       wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-9.4.0.54424.zip
       unzip sonarqube-9.4.0.54424.zip
       chmod -R 755 /home/sonarqube/sonarqube-9.4.0.54424
       # Change ownership
       chown -R sonarqube:sonarqube /home/sonarqube/sonarqube-9.4.0.54424
       # Start SonarQube
       cd sonarqube-9.4.0.54424/bin/linux-x86-64/
       ./sonar.sh start
       EOF
       
       echo "Sonarqube installation complete."

        
        
        -> Install AWS-CLI using Below script
        # Install AWS_CLI
        sudo apt-get update -y
        sudo apt-get install -y curl unzip
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install


-> Install Kubectl using Below script
       curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
       chmod +x kubectl
       sudo mv kubectl /usr/local/bin/
       

STEP 2:
-> Enable the inbound rules of EC2 instance,in the instances security group by giving port number 8080
-> paste the public ip of ec2 intance with port number in new tab to access the jenkins,<publicip:8080>
-> in the jenkins tab you will get a path, copy & paste that path in EC2 terminal to get password

     sudo cat <path which you got in jenkins tab>

->you will the jenkins password after pasting this, paste this in jenkins and create the admin credentials by giving Username and password and start the jenkins
->click on download the available plugins 

STEP 3 :
 Plugin Installation :
-> We have to install the below plugins according the project requirments
click on manage jenkins -> plugins -> login with admin credentials -> Available plugins ->search  for required plugins and install

         -> EclipseTemurin
         -> Docker
         -> Docker pipeline
         -> SonarQube scanner
         -> Sonar Quality gate
         -> Quality gate
         -> Nodejs
         -> OWASP Dependency-Check
         -> Email extension template
         -> Kubernetes
         -> Kuberntes Client API
         -> Kubernetes Credentials plugin
         -> Kubernetes CLI
         -> Kubernetes Credentials Provider
         -> Kubernetes plugin
         -> AWS Steps
         -> AWS Credentials
         -> Bitbucket

Restart Jenkins when installation is complete and no jobs are running (enable this option)

STEP 4 :Go to manage Jenkins, click credentials and cofigure below credentials
