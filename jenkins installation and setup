 create one Ec2 instance according your requirments
 execute the all the below scripts in the instance terminal

STEP 1:
#Install Jenkins Using Below script
        sudo apt-get update -y
        sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
            https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
        echo "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc]" \
            https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
            /etc/apt/sources.list.d/jenkins.list > /dev/null
        sudo apt-get update
        sudo apt-get install fontconfig openjdk-17-jre
        sudo apt-get install jenkins -y
        sudo systemctl start jenkins
        sudo systemctl enable jenkins
        sudo systemctl status jenkins

-> Later you will install docker using below commands
        sudo apt update
        sudo apt install docker.io
        sudo su - 
        usermod -aG docker jenkins
        usermod -aG docker ubuntu
        systemctl restart docker

STEP 2:
-> Enable the inbound rules of EC2 instance,in the instances security group by giving port number 8080
-> paste the public ip of ec2 intance with port number in new tab to access the jenkins,<publicip:8080>
-> in the jenkins tab you will get a path, copy & paste that path in EC2 terminal to get password

     sudo cat <path which you got in jenkins tab>

->you will the jenkins password after pasting this, paste this in jenkins and create the admin credentials by giving Username and password and start the jenkins
->click on download the available plugins 

STEP 3 :
 Plugin Installation :
-> We have to install the below plugins according the project requirments
click on manage jenkins -> plugins -> login with admin credentials -> Available plugins ->search  for required plugins and install

         -> EclipseTemurin
         -> Docker
         -> Docker pipeline
         -> SonarQube scanner
         -> Sonar Quality gate
         -> Quality gate
         -> Nodejs
         -> OWASP Dependency-Check
         -> Email extension template
         -> Kubernetes
         -> Kuberntes Client API
         -> Kubernetes Credentials plugin
         -> Kubernetes CLI
         -> Kubernetes Credentials Provider
         -> Kubernetes plugin
         -> AWS Steps
         -> AWS Credentials
         -> Bitbucket

Restart Jenkins when installation is complete and no jobs are running (enable this option)

STEP 4 :Go to manage Jenkins, click credentials and cofigure below credentials
